"use strict";
/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityMonitoringRuleResponse = void 0;
var ObjectSerializer_1 = require("./ObjectSerializer");
/**
* Detection rule.
*/
var SecurityMonitoringRuleResponse = /** @class */ (function () {
    function SecurityMonitoringRuleResponse() {
    }
    SecurityMonitoringRuleResponse.getAttributeTypeMap = function () {
        return SecurityMonitoringRuleResponse.attributeTypeMap;
    };
    SecurityMonitoringRuleResponse.deserialize = function (data) {
        var res = new SecurityMonitoringRuleResponse();
        res.cases = ObjectSerializer_1.ObjectSerializer.deserialize(data.cases, "Array<SecurityMonitoringRuleCase>", "");
        res.createdAt = ObjectSerializer_1.ObjectSerializer.deserialize(data.createdAt, "number", "int64");
        res.creationAuthorId = ObjectSerializer_1.ObjectSerializer.deserialize(data.creationAuthorId, "number", "int64");
        res.filters = ObjectSerializer_1.ObjectSerializer.deserialize(data.filters, "Array<SecurityMonitoringFilter>", "");
        res.id = ObjectSerializer_1.ObjectSerializer.deserialize(data.id, "string", "");
        res.isDefault = ObjectSerializer_1.ObjectSerializer.deserialize(data.isDefault, "boolean", "");
        res.isDeleted = ObjectSerializer_1.ObjectSerializer.deserialize(data.isDeleted, "boolean", "");
        res.isEnabled = ObjectSerializer_1.ObjectSerializer.deserialize(data.isEnabled, "boolean", "");
        res.message = ObjectSerializer_1.ObjectSerializer.deserialize(data.message, "string", "");
        res.name = ObjectSerializer_1.ObjectSerializer.deserialize(data.name, "string", "");
        res.options = ObjectSerializer_1.ObjectSerializer.deserialize(data.options, "SecurityMonitoringRuleOptions", "");
        res.queries = ObjectSerializer_1.ObjectSerializer.deserialize(data.queries, "Array<SecurityMonitoringRuleQuery>", "");
        res.tags = ObjectSerializer_1.ObjectSerializer.deserialize(data.tags, "Array<string>", "");
        res.version = ObjectSerializer_1.ObjectSerializer.deserialize(data.version, "number", "int64");
        return res;
    };
    SecurityMonitoringRuleResponse.serialize = function (data) {
        var attributeTypes = SecurityMonitoringRuleResponse.getAttributeTypeMap();
        var res = {};
        for (var _i = 0, _a = Object.entries(data); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            if (!(key in attributeTypes)) {
                throw new TypeError(key + " attribute not in schema");
            }
        }
        res.cases = ObjectSerializer_1.ObjectSerializer.serialize(data.cases, "Array<SecurityMonitoringRuleCase>", "");
        res.createdAt = ObjectSerializer_1.ObjectSerializer.serialize(data.createdAt, "number", "int64");
        res.creationAuthorId = ObjectSerializer_1.ObjectSerializer.serialize(data.creationAuthorId, "number", "int64");
        res.filters = ObjectSerializer_1.ObjectSerializer.serialize(data.filters, "Array<SecurityMonitoringFilter>", "");
        res.id = ObjectSerializer_1.ObjectSerializer.serialize(data.id, "string", "");
        res.isDefault = ObjectSerializer_1.ObjectSerializer.serialize(data.isDefault, "boolean", "");
        res.isDeleted = ObjectSerializer_1.ObjectSerializer.serialize(data.isDeleted, "boolean", "");
        res.isEnabled = ObjectSerializer_1.ObjectSerializer.serialize(data.isEnabled, "boolean", "");
        res.message = ObjectSerializer_1.ObjectSerializer.serialize(data.message, "string", "");
        res.name = ObjectSerializer_1.ObjectSerializer.serialize(data.name, "string", "");
        res.options = ObjectSerializer_1.ObjectSerializer.serialize(data.options, "SecurityMonitoringRuleOptions", "");
        res.queries = ObjectSerializer_1.ObjectSerializer.serialize(data.queries, "Array<SecurityMonitoringRuleQuery>", "");
        res.tags = ObjectSerializer_1.ObjectSerializer.serialize(data.tags, "Array<string>", "");
        res.version = ObjectSerializer_1.ObjectSerializer.serialize(data.version, "number", "int64");
        return res;
    };
    SecurityMonitoringRuleResponse.discriminator = undefined;
    SecurityMonitoringRuleResponse.attributeTypeMap = {
        "cases": {
            "baseName": "cases",
            "type": "Array<SecurityMonitoringRuleCase>",
            "format": ""
        },
        "createdAt": {
            "baseName": "createdAt",
            "type": "number",
            "format": "int64"
        },
        "creationAuthorId": {
            "baseName": "creationAuthorId",
            "type": "number",
            "format": "int64"
        },
        "filters": {
            "baseName": "filters",
            "type": "Array<SecurityMonitoringFilter>",
            "format": ""
        },
        "id": {
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        "isDefault": {
            "baseName": "isDefault",
            "type": "boolean",
            "format": ""
        },
        "isDeleted": {
            "baseName": "isDeleted",
            "type": "boolean",
            "format": ""
        },
        "isEnabled": {
            "baseName": "isEnabled",
            "type": "boolean",
            "format": ""
        },
        "message": {
            "baseName": "message",
            "type": "string",
            "format": ""
        },
        "name": {
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        "options": {
            "baseName": "options",
            "type": "SecurityMonitoringRuleOptions",
            "format": ""
        },
        "queries": {
            "baseName": "queries",
            "type": "Array<SecurityMonitoringRuleQuery>",
            "format": ""
        },
        "tags": {
            "baseName": "tags",
            "type": "Array<string>",
            "format": ""
        },
        "version": {
            "baseName": "version",
            "type": "number",
            "format": "int64"
        }
    };
    return SecurityMonitoringRuleResponse;
}());
exports.SecurityMonitoringRuleResponse = SecurityMonitoringRuleResponse;
//# sourceMappingURL=SecurityMonitoringRuleResponse.js.map