"use strict";
/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrganizationAttributes = void 0;
var ObjectSerializer_1 = require("./ObjectSerializer");
/**
* Attributes of the organization.
*/
var OrganizationAttributes = /** @class */ (function () {
    function OrganizationAttributes() {
    }
    OrganizationAttributes.getAttributeTypeMap = function () {
        return OrganizationAttributes.attributeTypeMap;
    };
    OrganizationAttributes.deserialize = function (data) {
        var res = new OrganizationAttributes();
        res.createdAt = ObjectSerializer_1.ObjectSerializer.deserialize(data.created_at, "Date", "date-time");
        res.description = ObjectSerializer_1.ObjectSerializer.deserialize(data.description, "string", "");
        res.disabled = ObjectSerializer_1.ObjectSerializer.deserialize(data.disabled, "boolean", "");
        res.modifiedAt = ObjectSerializer_1.ObjectSerializer.deserialize(data.modified_at, "Date", "date-time");
        res.name = ObjectSerializer_1.ObjectSerializer.deserialize(data.name, "string", "");
        res.publicId = ObjectSerializer_1.ObjectSerializer.deserialize(data.public_id, "string", "");
        res.sharing = ObjectSerializer_1.ObjectSerializer.deserialize(data.sharing, "string", "");
        res.url = ObjectSerializer_1.ObjectSerializer.deserialize(data.url, "string", "");
        return res;
    };
    OrganizationAttributes.serialize = function (data) {
        var attributeTypes = OrganizationAttributes.getAttributeTypeMap();
        var res = {};
        for (var _i = 0, _a = Object.entries(data); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            if (!(key in attributeTypes)) {
                throw new TypeError(key + " attribute not in schema");
            }
        }
        res.created_at = ObjectSerializer_1.ObjectSerializer.serialize(data.createdAt, "Date", "date-time");
        res.description = ObjectSerializer_1.ObjectSerializer.serialize(data.description, "string", "");
        res.disabled = ObjectSerializer_1.ObjectSerializer.serialize(data.disabled, "boolean", "");
        res.modified_at = ObjectSerializer_1.ObjectSerializer.serialize(data.modifiedAt, "Date", "date-time");
        res.name = ObjectSerializer_1.ObjectSerializer.serialize(data.name, "string", "");
        res.public_id = ObjectSerializer_1.ObjectSerializer.serialize(data.publicId, "string", "");
        res.sharing = ObjectSerializer_1.ObjectSerializer.serialize(data.sharing, "string", "");
        res.url = ObjectSerializer_1.ObjectSerializer.serialize(data.url, "string", "");
        return res;
    };
    OrganizationAttributes.discriminator = undefined;
    OrganizationAttributes.attributeTypeMap = {
        "createdAt": {
            "baseName": "created_at",
            "type": "Date",
            "format": "date-time"
        },
        "description": {
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        "disabled": {
            "baseName": "disabled",
            "type": "boolean",
            "format": ""
        },
        "modifiedAt": {
            "baseName": "modified_at",
            "type": "Date",
            "format": "date-time"
        },
        "name": {
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        "publicId": {
            "baseName": "public_id",
            "type": "string",
            "format": ""
        },
        "sharing": {
            "baseName": "sharing",
            "type": "string",
            "format": ""
        },
        "url": {
            "baseName": "url",
            "type": "string",
            "format": ""
        }
    };
    return OrganizationAttributes;
}());
exports.OrganizationAttributes = OrganizationAttributes;
//# sourceMappingURL=OrganizationAttributes.js.map