/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { IncidentFieldAttributes } from './IncidentFieldAttributes';
/**
* The incident's attributes for an update request.
*/
export declare class IncidentUpdateAttributes {
    /**
    * Timestamp when customers were no longer impacted by the incident.
    */
    'customerImpactEnd'?: Date;
    /**
    * A summary of the impact customers experienced during the incident.
    */
    'customerImpactScope'?: string;
    /**
    * Timestamp when customers began being impacted by the incident.
    */
    'customerImpactStart'?: Date;
    /**
    * A flag indicating whether the incident caused customer impact.
    */
    'customerImpacted'?: boolean;
    /**
    * Timestamp when the incident was detected.
    */
    'detected'?: Date;
    /**
    * A condensed view of the user-defined fields for which to update selections.
    */
    'fields'?: {
        [key: string]: IncidentFieldAttributes;
    };
    /**
    * Notification handles that will be notified of the incident during update.
    */
    'notificationHandles'?: Array<string>;
    /**
    * Timestamp when the incident's state was set to resolved.
    */
    'resolved'?: Date;
    /**
    * The title of the incident, which summarizes what happened.
    */
    'title'?: string;
    static readonly discriminator: string | undefined;
    static readonly attributeTypeMap: {
        [key: string]: {
            baseName: string;
            type: string;
            format: string;
        };
    };
    static getAttributeTypeMap(): {
        [key: string]: {
            baseName: string;
            type: string;
            format: string;
        };
    };
    static deserialize(data: {
        [key: string]: any;
    }): IncidentUpdateAttributes;
    static serialize(data: IncidentUpdateAttributes): {
        [key: string]: any;
    };
    constructor();
}
