"use strict";
/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PermissionAttributes = void 0;
var ObjectSerializer_1 = require("./ObjectSerializer");
/**
* Attributes of a permission.
*/
var PermissionAttributes = /** @class */ (function () {
    function PermissionAttributes() {
    }
    PermissionAttributes.getAttributeTypeMap = function () {
        return PermissionAttributes.attributeTypeMap;
    };
    PermissionAttributes.deserialize = function (data) {
        var res = new PermissionAttributes();
        res.created = ObjectSerializer_1.ObjectSerializer.deserialize(data.created, "Date", "date-time");
        res.description = ObjectSerializer_1.ObjectSerializer.deserialize(data.description, "string", "");
        res.displayName = ObjectSerializer_1.ObjectSerializer.deserialize(data.display_name, "string", "");
        res.displayType = ObjectSerializer_1.ObjectSerializer.deserialize(data.display_type, "string", "");
        res.groupName = ObjectSerializer_1.ObjectSerializer.deserialize(data.group_name, "string", "");
        res.name = ObjectSerializer_1.ObjectSerializer.deserialize(data.name, "string", "");
        res.restricted = ObjectSerializer_1.ObjectSerializer.deserialize(data.restricted, "boolean", "");
        return res;
    };
    PermissionAttributes.serialize = function (data) {
        var attributeTypes = PermissionAttributes.getAttributeTypeMap();
        var res = {};
        for (var _i = 0, _a = Object.entries(data); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            if (!(key in attributeTypes)) {
                throw new TypeError(key + " attribute not in schema");
            }
        }
        res.created = ObjectSerializer_1.ObjectSerializer.serialize(data.created, "Date", "date-time");
        res.description = ObjectSerializer_1.ObjectSerializer.serialize(data.description, "string", "");
        res.display_name = ObjectSerializer_1.ObjectSerializer.serialize(data.displayName, "string", "");
        res.display_type = ObjectSerializer_1.ObjectSerializer.serialize(data.displayType, "string", "");
        res.group_name = ObjectSerializer_1.ObjectSerializer.serialize(data.groupName, "string", "");
        res.name = ObjectSerializer_1.ObjectSerializer.serialize(data.name, "string", "");
        res.restricted = ObjectSerializer_1.ObjectSerializer.serialize(data.restricted, "boolean", "");
        return res;
    };
    PermissionAttributes.discriminator = undefined;
    PermissionAttributes.attributeTypeMap = {
        "created": {
            "baseName": "created",
            "type": "Date",
            "format": "date-time"
        },
        "description": {
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        "displayName": {
            "baseName": "display_name",
            "type": "string",
            "format": ""
        },
        "displayType": {
            "baseName": "display_type",
            "type": "string",
            "format": ""
        },
        "groupName": {
            "baseName": "group_name",
            "type": "string",
            "format": ""
        },
        "name": {
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        "restricted": {
            "baseName": "restricted",
            "type": "boolean",
            "format": ""
        }
    };
    return PermissionAttributes;
}());
exports.PermissionAttributes = PermissionAttributes;
//# sourceMappingURL=PermissionAttributes.js.map