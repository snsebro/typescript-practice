"use strict";
/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IncidentUpdateRelationships = void 0;
var ObjectSerializer_1 = require("./ObjectSerializer");
/**
* The incident's relationships for an update request.
*/
var IncidentUpdateRelationships = /** @class */ (function () {
    function IncidentUpdateRelationships() {
    }
    IncidentUpdateRelationships.getAttributeTypeMap = function () {
        return IncidentUpdateRelationships.attributeTypeMap;
    };
    IncidentUpdateRelationships.deserialize = function (data) {
        var res = new IncidentUpdateRelationships();
        res.commanderUser = ObjectSerializer_1.ObjectSerializer.deserialize(data.commander_user, "RelationshipToUser", "");
        res.createdByUser = ObjectSerializer_1.ObjectSerializer.deserialize(data.created_by_user, "RelationshipToUser", "");
        res.integrations = ObjectSerializer_1.ObjectSerializer.deserialize(data.integrations, "RelationshipToIncidentIntegrationMetadatas", "");
        res.lastModifiedByUser = ObjectSerializer_1.ObjectSerializer.deserialize(data.last_modified_by_user, "RelationshipToUser", "");
        res.postmortem = ObjectSerializer_1.ObjectSerializer.deserialize(data.postmortem, "RelationshipToIncidentPostmortem", "");
        return res;
    };
    IncidentUpdateRelationships.serialize = function (data) {
        var attributeTypes = IncidentUpdateRelationships.getAttributeTypeMap();
        var res = {};
        for (var _i = 0, _a = Object.entries(data); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            if (!(key in attributeTypes)) {
                throw new TypeError(key + " attribute not in schema");
            }
        }
        res.commander_user = ObjectSerializer_1.ObjectSerializer.serialize(data.commanderUser, "RelationshipToUser", "");
        res.created_by_user = ObjectSerializer_1.ObjectSerializer.serialize(data.createdByUser, "RelationshipToUser", "");
        res.integrations = ObjectSerializer_1.ObjectSerializer.serialize(data.integrations, "RelationshipToIncidentIntegrationMetadatas", "");
        res.last_modified_by_user = ObjectSerializer_1.ObjectSerializer.serialize(data.lastModifiedByUser, "RelationshipToUser", "");
        res.postmortem = ObjectSerializer_1.ObjectSerializer.serialize(data.postmortem, "RelationshipToIncidentPostmortem", "");
        return res;
    };
    IncidentUpdateRelationships.discriminator = undefined;
    IncidentUpdateRelationships.attributeTypeMap = {
        "commanderUser": {
            "baseName": "commander_user",
            "type": "RelationshipToUser",
            "format": ""
        },
        "createdByUser": {
            "baseName": "created_by_user",
            "type": "RelationshipToUser",
            "format": ""
        },
        "integrations": {
            "baseName": "integrations",
            "type": "RelationshipToIncidentIntegrationMetadatas",
            "format": ""
        },
        "lastModifiedByUser": {
            "baseName": "last_modified_by_user",
            "type": "RelationshipToUser",
            "format": ""
        },
        "postmortem": {
            "baseName": "postmortem",
            "type": "RelationshipToIncidentPostmortem",
            "format": ""
        }
    };
    return IncidentUpdateRelationships;
}());
exports.IncidentUpdateRelationships = IncidentUpdateRelationships;
//# sourceMappingURL=IncidentUpdateRelationships.js.map