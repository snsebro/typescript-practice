"use strict";
/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LogsMetricCreateAttributes = void 0;
var ObjectSerializer_1 = require("./ObjectSerializer");
/**
* The object describing the Datadog log-based metric to create.
*/
var LogsMetricCreateAttributes = /** @class */ (function () {
    function LogsMetricCreateAttributes() {
    }
    LogsMetricCreateAttributes.getAttributeTypeMap = function () {
        return LogsMetricCreateAttributes.attributeTypeMap;
    };
    LogsMetricCreateAttributes.deserialize = function (data) {
        var res = new LogsMetricCreateAttributes();
        if (data.compute === undefined) {
            throw new TypeError("missing required attribute 'compute' on 'LogsMetricCreateAttributes' object");
        }
        res.compute = ObjectSerializer_1.ObjectSerializer.deserialize(data.compute, "LogsMetricCompute", "");
        res.filter = ObjectSerializer_1.ObjectSerializer.deserialize(data.filter, "LogsMetricFilter", "");
        res.groupBy = ObjectSerializer_1.ObjectSerializer.deserialize(data.group_by, "Array<LogsMetricGroupBy>", "");
        return res;
    };
    LogsMetricCreateAttributes.serialize = function (data) {
        var attributeTypes = LogsMetricCreateAttributes.getAttributeTypeMap();
        var res = {};
        for (var _i = 0, _a = Object.entries(data); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            if (!(key in attributeTypes)) {
                throw new TypeError(key + " attribute not in schema");
            }
        }
        if (data.compute === undefined) {
            throw new TypeError("missing required attribute 'compute' on 'LogsMetricCreateAttributes' object");
        }
        res.compute = ObjectSerializer_1.ObjectSerializer.serialize(data.compute, "LogsMetricCompute", "");
        res.filter = ObjectSerializer_1.ObjectSerializer.serialize(data.filter, "LogsMetricFilter", "");
        res.group_by = ObjectSerializer_1.ObjectSerializer.serialize(data.groupBy, "Array<LogsMetricGroupBy>", "");
        return res;
    };
    LogsMetricCreateAttributes.discriminator = undefined;
    LogsMetricCreateAttributes.attributeTypeMap = {
        "compute": {
            "baseName": "compute",
            "type": "LogsMetricCompute",
            "format": ""
        },
        "filter": {
            "baseName": "filter",
            "type": "LogsMetricFilter",
            "format": ""
        },
        "groupBy": {
            "baseName": "group_by",
            "type": "Array<LogsMetricGroupBy>",
            "format": ""
        }
    };
    return LogsMetricCreateAttributes;
}());
exports.LogsMetricCreateAttributes = LogsMetricCreateAttributes;
//# sourceMappingURL=LogsMetricCreateAttributes.js.map