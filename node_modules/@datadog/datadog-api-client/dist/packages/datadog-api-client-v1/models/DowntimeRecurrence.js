"use strict";
/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DowntimeRecurrence = void 0;
var ObjectSerializer_1 = require("./ObjectSerializer");
/**
* An object defining the recurrence of the downtime.
*/
var DowntimeRecurrence = /** @class */ (function () {
    function DowntimeRecurrence() {
    }
    DowntimeRecurrence.getAttributeTypeMap = function () {
        return DowntimeRecurrence.attributeTypeMap;
    };
    DowntimeRecurrence.deserialize = function (data) {
        var res = new DowntimeRecurrence();
        res.period = ObjectSerializer_1.ObjectSerializer.deserialize(data.period, "number", "int32");
        res.rrule = ObjectSerializer_1.ObjectSerializer.deserialize(data.rrule, "string", "");
        res.type = ObjectSerializer_1.ObjectSerializer.deserialize(data.type, "string", "");
        res.untilDate = ObjectSerializer_1.ObjectSerializer.deserialize(data.until_date, "number", "int64");
        res.untilOccurrences = ObjectSerializer_1.ObjectSerializer.deserialize(data.until_occurrences, "number", "int32");
        res.weekDays = ObjectSerializer_1.ObjectSerializer.deserialize(data.week_days, "Array<string>", "");
        return res;
    };
    DowntimeRecurrence.serialize = function (data) {
        var attributeTypes = DowntimeRecurrence.getAttributeTypeMap();
        var res = {};
        for (var _i = 0, _a = Object.entries(data); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            if (!(key in attributeTypes)) {
                throw new TypeError(key + " attribute not in schema");
            }
        }
        res.period = ObjectSerializer_1.ObjectSerializer.serialize(data.period, "number", "int32");
        res.rrule = ObjectSerializer_1.ObjectSerializer.serialize(data.rrule, "string", "");
        res.type = ObjectSerializer_1.ObjectSerializer.serialize(data.type, "string", "");
        res.until_date = ObjectSerializer_1.ObjectSerializer.serialize(data.untilDate, "number", "int64");
        res.until_occurrences = ObjectSerializer_1.ObjectSerializer.serialize(data.untilOccurrences, "number", "int32");
        res.week_days = ObjectSerializer_1.ObjectSerializer.serialize(data.weekDays, "Array<string>", "");
        return res;
    };
    DowntimeRecurrence.discriminator = undefined;
    DowntimeRecurrence.attributeTypeMap = {
        "period": {
            "baseName": "period",
            "type": "number",
            "format": "int32"
        },
        "rrule": {
            "baseName": "rrule",
            "type": "string",
            "format": ""
        },
        "type": {
            "baseName": "type",
            "type": "string",
            "format": ""
        },
        "untilDate": {
            "baseName": "until_date",
            "type": "number",
            "format": "int64"
        },
        "untilOccurrences": {
            "baseName": "until_occurrences",
            "type": "number",
            "format": "int32"
        },
        "weekDays": {
            "baseName": "week_days",
            "type": "Array<string>",
            "format": ""
        }
    };
    return DowntimeRecurrence;
}());
exports.DowntimeRecurrence = DowntimeRecurrence;
//# sourceMappingURL=DowntimeRecurrence.js.map