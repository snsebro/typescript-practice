"use strict";
/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FormulaAndFunctionEventQueryGroupBy = void 0;
var ObjectSerializer_1 = require("./ObjectSerializer");
/**
* List of objects used to group by.
*/
var FormulaAndFunctionEventQueryGroupBy = /** @class */ (function () {
    function FormulaAndFunctionEventQueryGroupBy() {
    }
    FormulaAndFunctionEventQueryGroupBy.getAttributeTypeMap = function () {
        return FormulaAndFunctionEventQueryGroupBy.attributeTypeMap;
    };
    FormulaAndFunctionEventQueryGroupBy.deserialize = function (data) {
        var res = new FormulaAndFunctionEventQueryGroupBy();
        if (data.facet === undefined) {
            throw new TypeError("missing required attribute 'facet' on 'FormulaAndFunctionEventQueryGroupBy' object");
        }
        res.facet = ObjectSerializer_1.ObjectSerializer.deserialize(data.facet, "string", "");
        res.limit = ObjectSerializer_1.ObjectSerializer.deserialize(data.limit, "number", "int64");
        res.sort = ObjectSerializer_1.ObjectSerializer.deserialize(data.sort, "FormulaAndFunctionEventQueryGroupBySort", "");
        return res;
    };
    FormulaAndFunctionEventQueryGroupBy.serialize = function (data) {
        var attributeTypes = FormulaAndFunctionEventQueryGroupBy.getAttributeTypeMap();
        var res = {};
        for (var _i = 0, _a = Object.entries(data); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            if (!(key in attributeTypes)) {
                throw new TypeError(key + " attribute not in schema");
            }
        }
        if (data.facet === undefined) {
            throw new TypeError("missing required attribute 'facet' on 'FormulaAndFunctionEventQueryGroupBy' object");
        }
        res.facet = ObjectSerializer_1.ObjectSerializer.serialize(data.facet, "string", "");
        res.limit = ObjectSerializer_1.ObjectSerializer.serialize(data.limit, "number", "int64");
        res.sort = ObjectSerializer_1.ObjectSerializer.serialize(data.sort, "FormulaAndFunctionEventQueryGroupBySort", "");
        return res;
    };
    FormulaAndFunctionEventQueryGroupBy.discriminator = undefined;
    FormulaAndFunctionEventQueryGroupBy.attributeTypeMap = {
        "facet": {
            "baseName": "facet",
            "type": "string",
            "format": ""
        },
        "limit": {
            "baseName": "limit",
            "type": "number",
            "format": "int64"
        },
        "sort": {
            "baseName": "sort",
            "type": "FormulaAndFunctionEventQueryGroupBySort",
            "format": ""
        }
    };
    return FormulaAndFunctionEventQueryGroupBy;
}());
exports.FormulaAndFunctionEventQueryGroupBy = FormulaAndFunctionEventQueryGroupBy;
//# sourceMappingURL=FormulaAndFunctionEventQueryGroupBy.js.map