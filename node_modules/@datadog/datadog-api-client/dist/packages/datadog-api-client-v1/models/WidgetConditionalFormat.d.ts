/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { WidgetComparator } from './WidgetComparator';
import { WidgetPalette } from './WidgetPalette';
/**
* Define a conditional format for the widget.
*/
export declare class WidgetConditionalFormat {
    'comparator': WidgetComparator;
    /**
    * Color palette to apply to the background, same values available as palette.
    */
    'customBgColor'?: string;
    /**
    * Color palette to apply to the foreground, same values available as palette.
    */
    'customFgColor'?: string;
    /**
    * True hides values.
    */
    'hideValue'?: boolean;
    /**
    * Displays an image as the background.
    */
    'imageUrl'?: string;
    /**
    * Metric from the request to correlate this conditional format with.
    */
    'metric'?: string;
    'palette': WidgetPalette;
    /**
    * Defines the displayed timeframe.
    */
    'timeframe'?: string;
    /**
    * Value for the comparator.
    */
    'value': number;
    static readonly discriminator: string | undefined;
    static readonly attributeTypeMap: {
        [key: string]: {
            baseName: string;
            type: string;
            format: string;
        };
    };
    static getAttributeTypeMap(): {
        [key: string]: {
            baseName: string;
            type: string;
            format: string;
        };
    };
    static deserialize(data: {
        [key: string]: any;
    }): WidgetConditionalFormat;
    static serialize(data: WidgetConditionalFormat): {
        [key: string]: any;
    };
    constructor();
}
