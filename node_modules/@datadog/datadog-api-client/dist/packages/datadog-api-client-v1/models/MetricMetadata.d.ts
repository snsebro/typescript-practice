/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
* Object with all metric related metadata.
*/
export declare class MetricMetadata {
    /**
    * Metric description.
    */
    'description'?: string;
    /**
    * Name of the integration that sent the metric if applicable.
    */
    'integration'?: string;
    /**
    * Per unit of the metric such as `second` in `bytes per second`.
    */
    'perUnit'?: string;
    /**
    * A more human-readable and abbreviated version of the metric name.
    */
    'shortName'?: string;
    /**
    * StatsD flush interval of the metric in seconds if applicable.
    */
    'statsdInterval'?: number;
    /**
    * Metric type such as `gauge` or `rate`.
    */
    'type'?: string;
    /**
    * Primary unit of the metric such as `byte` or `operation`.
    */
    'unit'?: string;
    static readonly discriminator: string | undefined;
    static readonly attributeTypeMap: {
        [key: string]: {
            baseName: string;
            type: string;
            format: string;
        };
    };
    static getAttributeTypeMap(): {
        [key: string]: {
            baseName: string;
            type: string;
            format: string;
        };
    };
    static deserialize(data: {
        [key: string]: any;
    }): MetricMetadata;
    static serialize(data: MetricMetadata): {
        [key: string]: any;
    };
    constructor();
}
