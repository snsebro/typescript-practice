"use strict";
/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NotebookCreateDataAttributes = void 0;
var ObjectSerializer_1 = require("./ObjectSerializer");
/**
* The data attributes of a notebook.
*/
var NotebookCreateDataAttributes = /** @class */ (function () {
    function NotebookCreateDataAttributes() {
    }
    NotebookCreateDataAttributes.getAttributeTypeMap = function () {
        return NotebookCreateDataAttributes.attributeTypeMap;
    };
    NotebookCreateDataAttributes.deserialize = function (data) {
        var res = new NotebookCreateDataAttributes();
        if (data.cells === undefined) {
            throw new TypeError("missing required attribute 'cells' on 'NotebookCreateDataAttributes' object");
        }
        res.cells = ObjectSerializer_1.ObjectSerializer.deserialize(data.cells, "Array<NotebookCellCreateRequest>", "");
        if (data.name === undefined) {
            throw new TypeError("missing required attribute 'name' on 'NotebookCreateDataAttributes' object");
        }
        res.name = ObjectSerializer_1.ObjectSerializer.deserialize(data.name, "string", "");
        if (['published', undefined].includes(data.status)) {
            res.status = data.status;
        }
        else {
            throw TypeError("invalid enum value " + data.status + " for status");
        }
        if (data.time === undefined) {
            throw new TypeError("missing required attribute 'time' on 'NotebookCreateDataAttributes' object");
        }
        res.time = ObjectSerializer_1.ObjectSerializer.deserialize(data.time, "NotebookGlobalTime", "");
        return res;
    };
    NotebookCreateDataAttributes.serialize = function (data) {
        var attributeTypes = NotebookCreateDataAttributes.getAttributeTypeMap();
        var res = {};
        for (var _i = 0, _a = Object.entries(data); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            if (!(key in attributeTypes)) {
                throw new TypeError(key + " attribute not in schema");
            }
        }
        if (data.cells === undefined) {
            throw new TypeError("missing required attribute 'cells' on 'NotebookCreateDataAttributes' object");
        }
        res.cells = ObjectSerializer_1.ObjectSerializer.serialize(data.cells, "Array<NotebookCellCreateRequest>", "");
        if (data.name === undefined) {
            throw new TypeError("missing required attribute 'name' on 'NotebookCreateDataAttributes' object");
        }
        res.name = ObjectSerializer_1.ObjectSerializer.serialize(data.name, "string", "");
        if (['published', undefined].includes(data.status)) {
            res.status = data.status;
        }
        else {
            throw TypeError("invalid enum value " + data.status + " for status");
        }
        if (data.time === undefined) {
            throw new TypeError("missing required attribute 'time' on 'NotebookCreateDataAttributes' object");
        }
        res.time = ObjectSerializer_1.ObjectSerializer.serialize(data.time, "NotebookGlobalTime", "");
        return res;
    };
    NotebookCreateDataAttributes.discriminator = undefined;
    NotebookCreateDataAttributes.attributeTypeMap = {
        "cells": {
            "baseName": "cells",
            "type": "Array<NotebookCellCreateRequest>",
            "format": ""
        },
        "name": {
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        "status": {
            "baseName": "status",
            "type": "NotebookStatus",
            "format": ""
        },
        "time": {
            "baseName": "time",
            "type": "NotebookGlobalTime",
            "format": ""
        }
    };
    return NotebookCreateDataAttributes;
}());
exports.NotebookCreateDataAttributes = NotebookCreateDataAttributes;
//# sourceMappingURL=NotebookCreateDataAttributes.js.map