/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { DashboardLayoutType } from './DashboardLayoutType';
import { DashboardReflowType } from './DashboardReflowType';
import { DashboardTemplateVariable } from './DashboardTemplateVariable';
import { DashboardTemplateVariablePreset } from './DashboardTemplateVariablePreset';
import { Widget } from './Widget';
/**
* A dashboard is Datadogâ€™s tool for visually tracking, analyzing, and displaying key performance metrics, which enable you to monitor the health of your infrastructure.
*/
export declare class Dashboard {
    /**
    * Identifier of the dashboard author.
    */
    'authorHandle'?: string;
    /**
    * Creation date of the dashboard.
    */
    'createdAt'?: Date;
    /**
    * Description of the dashboard.
    */
    'description'?: string;
    /**
    * ID of the dashboard.
    */
    'id'?: string;
    /**
    * Whether this dashboard is read-only. If True, only the author and admins can make changes to it.
    */
    'isReadOnly'?: boolean;
    'layoutType': DashboardLayoutType;
    /**
    * Modification date of the dashboard.
    */
    'modifiedAt'?: Date;
    /**
    * List of handles of users to notify when changes are made to this dashboard.
    */
    'notifyList'?: Array<string>;
    'reflowType'?: DashboardReflowType;
    /**
    * Array of template variables saved views.
    */
    'templateVariablePresets'?: Array<DashboardTemplateVariablePreset>;
    /**
    * List of template variables for this dashboard.
    */
    'templateVariables'?: Array<DashboardTemplateVariable>;
    /**
    * Title of the dashboard.
    */
    'title': string;
    /**
    * The URL of the dashboard.
    */
    'url'?: string;
    /**
    * List of widgets to display on the dashboard.
    */
    'widgets': Array<Widget>;
    static readonly discriminator: string | undefined;
    static readonly attributeTypeMap: {
        [key: string]: {
            baseName: string;
            type: string;
            format: string;
        };
    };
    static getAttributeTypeMap(): {
        [key: string]: {
            baseName: string;
            type: string;
            format: string;
        };
    };
    static deserialize(data: {
        [key: string]: any;
    }): Dashboard;
    static serialize(data: Dashboard): {
        [key: string]: any;
    };
    constructor();
}
