/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { SyntheticsStep } from './SyntheticsStep';
import { SyntheticsTestConfig } from './SyntheticsTestConfig';
import { SyntheticsTestDetailsSubType } from './SyntheticsTestDetailsSubType';
import { SyntheticsTestDetailsType } from './SyntheticsTestDetailsType';
import { SyntheticsTestOptions } from './SyntheticsTestOptions';
import { SyntheticsTestPauseStatus } from './SyntheticsTestPauseStatus';
/**
* Object containing details about your Synthetic test.
*/
export declare class SyntheticsTestDetails {
    'config'?: SyntheticsTestConfig;
    /**
    * Array of locations used to run the test.
    */
    'locations'?: Array<string>;
    /**
    * Notification message associated with the test.
    */
    'message'?: string;
    /**
    * The associated monitor ID.
    */
    'monitorId'?: number;
    /**
    * Name of the test.
    */
    'name'?: string;
    'options'?: SyntheticsTestOptions;
    /**
    * The test public ID.
    */
    'publicId'?: string;
    'status'?: SyntheticsTestPauseStatus;
    /**
    * For browser test, the steps of the test.
    */
    'steps'?: Array<SyntheticsStep>;
    'subtype'?: SyntheticsTestDetailsSubType;
    /**
    * Array of tags attached to the test.
    */
    'tags'?: Array<string>;
    'type'?: SyntheticsTestDetailsType;
    static readonly discriminator: string | undefined;
    static readonly attributeTypeMap: {
        [key: string]: {
            baseName: string;
            type: string;
            format: string;
        };
    };
    static getAttributeTypeMap(): {
        [key: string]: {
            baseName: string;
            type: string;
            format: string;
        };
    };
    static deserialize(data: {
        [key: string]: any;
    }): SyntheticsTestDetails;
    static serialize(data: SyntheticsTestDetails): {
        [key: string]: any;
    };
    constructor();
}
