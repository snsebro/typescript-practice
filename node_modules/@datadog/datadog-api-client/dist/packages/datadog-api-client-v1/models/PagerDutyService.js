"use strict";
/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PagerDutyService = void 0;
var ObjectSerializer_1 = require("./ObjectSerializer");
/**
* The PagerDuty service that is available for integration with Datadog.
*/
var PagerDutyService = /** @class */ (function () {
    function PagerDutyService() {
    }
    PagerDutyService.getAttributeTypeMap = function () {
        return PagerDutyService.attributeTypeMap;
    };
    PagerDutyService.deserialize = function (data) {
        var res = new PagerDutyService();
        if (data.service_key === undefined) {
            throw new TypeError("missing required attribute 'service_key' on 'PagerDutyService' object");
        }
        res.serviceKey = ObjectSerializer_1.ObjectSerializer.deserialize(data.service_key, "string", "");
        if (data.service_name === undefined) {
            throw new TypeError("missing required attribute 'service_name' on 'PagerDutyService' object");
        }
        res.serviceName = ObjectSerializer_1.ObjectSerializer.deserialize(data.service_name, "string", "");
        return res;
    };
    PagerDutyService.serialize = function (data) {
        var attributeTypes = PagerDutyService.getAttributeTypeMap();
        var res = {};
        for (var _i = 0, _a = Object.entries(data); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            if (!(key in attributeTypes)) {
                throw new TypeError(key + " attribute not in schema");
            }
        }
        if (data.serviceKey === undefined) {
            throw new TypeError("missing required attribute 'service_key' on 'PagerDutyService' object");
        }
        res.service_key = ObjectSerializer_1.ObjectSerializer.serialize(data.serviceKey, "string", "");
        if (data.serviceName === undefined) {
            throw new TypeError("missing required attribute 'service_name' on 'PagerDutyService' object");
        }
        res.service_name = ObjectSerializer_1.ObjectSerializer.serialize(data.serviceName, "string", "");
        return res;
    };
    PagerDutyService.discriminator = undefined;
    PagerDutyService.attributeTypeMap = {
        "serviceKey": {
            "baseName": "service_key",
            "type": "string",
            "format": ""
        },
        "serviceName": {
            "baseName": "service_name",
            "type": "string",
            "format": ""
        }
    };
    return PagerDutyService;
}());
exports.PagerDutyService = PagerDutyService;
//# sourceMappingURL=PagerDutyService.js.map