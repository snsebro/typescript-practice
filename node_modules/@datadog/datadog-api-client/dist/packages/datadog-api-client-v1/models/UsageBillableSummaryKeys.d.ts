/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { UsageBillableSummaryBody } from './UsageBillableSummaryBody';
/**
* Response with aggregated usage types.
*/
export declare class UsageBillableSummaryKeys {
    'apmHostSum'?: UsageBillableSummaryBody;
    'apmHostTop99p'?: UsageBillableSummaryBody;
    'apmTraceSearchSum'?: UsageBillableSummaryBody;
    'fargateContainerAverage'?: UsageBillableSummaryBody;
    'infraContainerSum'?: UsageBillableSummaryBody;
    'infraHostSum'?: UsageBillableSummaryBody;
    'infraHostTop99p'?: UsageBillableSummaryBody;
    'iotTop99p'?: UsageBillableSummaryBody;
    'lambdaFunctionAverage'?: UsageBillableSummaryBody;
    'logsIndexedSum'?: UsageBillableSummaryBody;
    'logsIngestedSum'?: UsageBillableSummaryBody;
    'npmFlowSum'?: UsageBillableSummaryBody;
    'npmHostTop99p'?: UsageBillableSummaryBody;
    'rumSum'?: UsageBillableSummaryBody;
    'serverlessInvocationSum'?: UsageBillableSummaryBody;
    'siemSum'?: UsageBillableSummaryBody;
    'syntheticsApiTestsSum'?: UsageBillableSummaryBody;
    'syntheticsBrowserChecksSum'?: UsageBillableSummaryBody;
    'timeseriesAverage'?: UsageBillableSummaryBody;
    static readonly discriminator: string | undefined;
    static readonly attributeTypeMap: {
        [key: string]: {
            baseName: string;
            type: string;
            format: string;
        };
    };
    static getAttributeTypeMap(): {
        [key: string]: {
            baseName: string;
            type: string;
            format: string;
        };
    };
    static deserialize(data: {
        [key: string]: any;
    }): UsageBillableSummaryKeys;
    static serialize(data: UsageBillableSummaryKeys): {
        [key: string]: any;
    };
    constructor();
}
