"use strict";
/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrganizationSettings = void 0;
var ObjectSerializer_1 = require("./ObjectSerializer");
/**
* A JSON array of settings.
*/
var OrganizationSettings = /** @class */ (function () {
    function OrganizationSettings() {
    }
    OrganizationSettings.getAttributeTypeMap = function () {
        return OrganizationSettings.attributeTypeMap;
    };
    OrganizationSettings.deserialize = function (data) {
        var res = new OrganizationSettings();
        res.privateWidgetShare = ObjectSerializer_1.ObjectSerializer.deserialize(data.private_widget_share, "boolean", "");
        res.saml = ObjectSerializer_1.ObjectSerializer.deserialize(data.saml, "OrganizationSettingsSaml", "");
        if (['st', 'adm', 'ro', 'ERROR', undefined].includes(data.saml_autocreate_access_role)) {
            res.samlAutocreateAccessRole = data.saml_autocreate_access_role;
        }
        else {
            throw TypeError("invalid enum value " + data.saml_autocreate_access_role + " for saml_autocreate_access_role");
        }
        res.samlAutocreateUsersDomains = ObjectSerializer_1.ObjectSerializer.deserialize(data.saml_autocreate_users_domains, "OrganizationSettingsSamlAutocreateUsersDomains", "");
        res.samlCanBeEnabled = ObjectSerializer_1.ObjectSerializer.deserialize(data.saml_can_be_enabled, "boolean", "");
        res.samlIdpEndpoint = ObjectSerializer_1.ObjectSerializer.deserialize(data.saml_idp_endpoint, "string", "");
        res.samlIdpInitiatedLogin = ObjectSerializer_1.ObjectSerializer.deserialize(data.saml_idp_initiated_login, "OrganizationSettingsSamlIdpInitiatedLogin", "");
        res.samlIdpMetadataUploaded = ObjectSerializer_1.ObjectSerializer.deserialize(data.saml_idp_metadata_uploaded, "boolean", "");
        res.samlLoginUrl = ObjectSerializer_1.ObjectSerializer.deserialize(data.saml_login_url, "string", "");
        res.samlStrictMode = ObjectSerializer_1.ObjectSerializer.deserialize(data.saml_strict_mode, "OrganizationSettingsSamlStrictMode", "");
        return res;
    };
    OrganizationSettings.serialize = function (data) {
        var attributeTypes = OrganizationSettings.getAttributeTypeMap();
        var res = {};
        for (var _i = 0, _a = Object.entries(data); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            if (!(key in attributeTypes)) {
                throw new TypeError(key + " attribute not in schema");
            }
        }
        res.private_widget_share = ObjectSerializer_1.ObjectSerializer.serialize(data.privateWidgetShare, "boolean", "");
        res.saml = ObjectSerializer_1.ObjectSerializer.serialize(data.saml, "OrganizationSettingsSaml", "");
        if (['st', 'adm', 'ro', 'ERROR', undefined].includes(data.samlAutocreateAccessRole)) {
            res.saml_autocreate_access_role = data.samlAutocreateAccessRole;
        }
        else {
            throw TypeError("invalid enum value " + data.samlAutocreateAccessRole + " for samlAutocreateAccessRole");
        }
        res.saml_autocreate_users_domains = ObjectSerializer_1.ObjectSerializer.serialize(data.samlAutocreateUsersDomains, "OrganizationSettingsSamlAutocreateUsersDomains", "");
        res.saml_can_be_enabled = ObjectSerializer_1.ObjectSerializer.serialize(data.samlCanBeEnabled, "boolean", "");
        res.saml_idp_endpoint = ObjectSerializer_1.ObjectSerializer.serialize(data.samlIdpEndpoint, "string", "");
        res.saml_idp_initiated_login = ObjectSerializer_1.ObjectSerializer.serialize(data.samlIdpInitiatedLogin, "OrganizationSettingsSamlIdpInitiatedLogin", "");
        res.saml_idp_metadata_uploaded = ObjectSerializer_1.ObjectSerializer.serialize(data.samlIdpMetadataUploaded, "boolean", "");
        res.saml_login_url = ObjectSerializer_1.ObjectSerializer.serialize(data.samlLoginUrl, "string", "");
        res.saml_strict_mode = ObjectSerializer_1.ObjectSerializer.serialize(data.samlStrictMode, "OrganizationSettingsSamlStrictMode", "");
        return res;
    };
    OrganizationSettings.discriminator = undefined;
    OrganizationSettings.attributeTypeMap = {
        "privateWidgetShare": {
            "baseName": "private_widget_share",
            "type": "boolean",
            "format": ""
        },
        "saml": {
            "baseName": "saml",
            "type": "OrganizationSettingsSaml",
            "format": ""
        },
        "samlAutocreateAccessRole": {
            "baseName": "saml_autocreate_access_role",
            "type": "AccessRole",
            "format": ""
        },
        "samlAutocreateUsersDomains": {
            "baseName": "saml_autocreate_users_domains",
            "type": "OrganizationSettingsSamlAutocreateUsersDomains",
            "format": ""
        },
        "samlCanBeEnabled": {
            "baseName": "saml_can_be_enabled",
            "type": "boolean",
            "format": ""
        },
        "samlIdpEndpoint": {
            "baseName": "saml_idp_endpoint",
            "type": "string",
            "format": ""
        },
        "samlIdpInitiatedLogin": {
            "baseName": "saml_idp_initiated_login",
            "type": "OrganizationSettingsSamlIdpInitiatedLogin",
            "format": ""
        },
        "samlIdpMetadataUploaded": {
            "baseName": "saml_idp_metadata_uploaded",
            "type": "boolean",
            "format": ""
        },
        "samlLoginUrl": {
            "baseName": "saml_login_url",
            "type": "string",
            "format": ""
        },
        "samlStrictMode": {
            "baseName": "saml_strict_mode",
            "type": "OrganizationSettingsSamlStrictMode",
            "format": ""
        }
    };
    return OrganizationSettings;
}());
exports.OrganizationSettings = OrganizationSettings;
//# sourceMappingURL=OrganizationSettings.js.map