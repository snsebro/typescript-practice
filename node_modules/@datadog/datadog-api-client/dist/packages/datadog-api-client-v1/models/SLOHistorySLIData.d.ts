/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { SLOHistoryResponseError } from './SLOHistoryResponseError';
/**
* An object that holds an SLI value and its associated data. It can represent an SLO's overall SLI value. This can also represent the SLI value for a specific monitor in multi-monitor SLOs, or a group in grouped SLOs.
*/
export declare class SLOHistorySLIData {
    /**
    * A mapping of threshold `timeframe` to the remaining error budget.
    */
    'errorBudgetRemaining'?: {
        [key: string]: number;
    };
    /**
    * A list of errors while querying the history data for the service level objective.
    */
    'errors'?: Array<SLOHistoryResponseError>;
    /**
    * For groups in a grouped SLO, this is the group name.
    */
    'group'?: string;
    /**
    * For `monitor` based SLOs, this includes the aggregated history uptime time series.
    */
    'history'?: Array<Array<number>>;
    /**
    * For `monitor` based SLOs, this is the last modified timestamp in epoch seconds of the monitor.
    */
    'monitorModified'?: number;
    /**
    * For `monitor` based SLOs, this describes the type of monitor.
    */
    'monitorType'?: string;
    /**
    * For groups in a grouped SLO, this is the group name. For monitors in a multi-monitor SLO, this is the monitor name.
    */
    'name'?: string;
    /**
    * A mapping of threshold `timeframe` to number of accurate decimals, regardless of the from && to timestamp.
    */
    'precision'?: {
        [key: string]: number;
    };
    /**
    * For `monitor` based SLOs, when `true` this indicates that a replay is in progress to give an accurate uptime calculation.
    */
    'preview'?: boolean;
    /**
    * The current SLI value of the SLO over the history window.
    */
    'sliValue'?: number;
    /**
    * The amount of decimal places the SLI value is accurate to for the given from `&&` to timestamp.
    */
    'spanPrecision'?: number;
    /**
    * Use `sli_value` instead.
    */
    'uptime'?: number;
    static readonly discriminator: string | undefined;
    static readonly attributeTypeMap: {
        [key: string]: {
            baseName: string;
            type: string;
            format: string;
        };
    };
    static getAttributeTypeMap(): {
        [key: string]: {
            baseName: string;
            type: string;
            format: string;
        };
    };
    static deserialize(data: {
        [key: string]: any;
    }): SLOHistorySLIData;
    static serialize(data: SLOHistorySLIData): {
        [key: string]: any;
    };
    constructor();
}
