"use strict";
/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LogsRetentionAggSumUsage = void 0;
var ObjectSerializer_1 = require("./ObjectSerializer");
/**
* Object containing indexed logs usage aggregated across organizations and months for a retention period.
*/
var LogsRetentionAggSumUsage = /** @class */ (function () {
    function LogsRetentionAggSumUsage() {
    }
    LogsRetentionAggSumUsage.getAttributeTypeMap = function () {
        return LogsRetentionAggSumUsage.attributeTypeMap;
    };
    LogsRetentionAggSumUsage.deserialize = function (data) {
        var res = new LogsRetentionAggSumUsage();
        res.logsIndexedLogsUsageAggSum = ObjectSerializer_1.ObjectSerializer.deserialize(data.logs_indexed_logs_usage_agg_sum, "number", "int64");
        res.logsLiveIndexedLogsUsageAggSum = ObjectSerializer_1.ObjectSerializer.deserialize(data.logs_live_indexed_logs_usage_agg_sum, "number", "int64");
        res.logsRehydratedIndexedLogsUsageAggSum = ObjectSerializer_1.ObjectSerializer.deserialize(data.logs_rehydrated_indexed_logs_usage_agg_sum, "number", "int64");
        res.retention = ObjectSerializer_1.ObjectSerializer.deserialize(data.retention, "string", "");
        return res;
    };
    LogsRetentionAggSumUsage.serialize = function (data) {
        var attributeTypes = LogsRetentionAggSumUsage.getAttributeTypeMap();
        var res = {};
        for (var _i = 0, _a = Object.entries(data); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            if (!(key in attributeTypes)) {
                throw new TypeError(key + " attribute not in schema");
            }
        }
        res.logs_indexed_logs_usage_agg_sum = ObjectSerializer_1.ObjectSerializer.serialize(data.logsIndexedLogsUsageAggSum, "number", "int64");
        res.logs_live_indexed_logs_usage_agg_sum = ObjectSerializer_1.ObjectSerializer.serialize(data.logsLiveIndexedLogsUsageAggSum, "number", "int64");
        res.logs_rehydrated_indexed_logs_usage_agg_sum = ObjectSerializer_1.ObjectSerializer.serialize(data.logsRehydratedIndexedLogsUsageAggSum, "number", "int64");
        res.retention = ObjectSerializer_1.ObjectSerializer.serialize(data.retention, "string", "");
        return res;
    };
    LogsRetentionAggSumUsage.discriminator = undefined;
    LogsRetentionAggSumUsage.attributeTypeMap = {
        "logsIndexedLogsUsageAggSum": {
            "baseName": "logs_indexed_logs_usage_agg_sum",
            "type": "number",
            "format": "int64"
        },
        "logsLiveIndexedLogsUsageAggSum": {
            "baseName": "logs_live_indexed_logs_usage_agg_sum",
            "type": "number",
            "format": "int64"
        },
        "logsRehydratedIndexedLogsUsageAggSum": {
            "baseName": "logs_rehydrated_indexed_logs_usage_agg_sum",
            "type": "number",
            "format": "int64"
        },
        "retention": {
            "baseName": "retention",
            "type": "string",
            "format": ""
        }
    };
    return LogsRetentionAggSumUsage;
}());
exports.LogsRetentionAggSumUsage = LogsRetentionAggSumUsage;
//# sourceMappingURL=LogsRetentionAggSumUsage.js.map