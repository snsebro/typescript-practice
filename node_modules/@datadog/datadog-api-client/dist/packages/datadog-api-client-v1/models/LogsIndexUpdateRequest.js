"use strict";
/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LogsIndexUpdateRequest = void 0;
var ObjectSerializer_1 = require("./ObjectSerializer");
/**
* Object for updating a Datadog Log index.
*/
var LogsIndexUpdateRequest = /** @class */ (function () {
    function LogsIndexUpdateRequest() {
    }
    LogsIndexUpdateRequest.getAttributeTypeMap = function () {
        return LogsIndexUpdateRequest.attributeTypeMap;
    };
    LogsIndexUpdateRequest.deserialize = function (data) {
        var res = new LogsIndexUpdateRequest();
        res.dailyLimit = ObjectSerializer_1.ObjectSerializer.deserialize(data.daily_limit, "number", "int64");
        res.disableDailyLimit = ObjectSerializer_1.ObjectSerializer.deserialize(data.disable_daily_limit, "boolean", "");
        res.exclusionFilters = ObjectSerializer_1.ObjectSerializer.deserialize(data.exclusion_filters, "Array<LogsExclusion>", "");
        if (data.filter === undefined) {
            throw new TypeError("missing required attribute 'filter' on 'LogsIndexUpdateRequest' object");
        }
        res.filter = ObjectSerializer_1.ObjectSerializer.deserialize(data.filter, "LogsFilter", "");
        res.numRetentionDays = ObjectSerializer_1.ObjectSerializer.deserialize(data.num_retention_days, "number", "int64");
        return res;
    };
    LogsIndexUpdateRequest.serialize = function (data) {
        var attributeTypes = LogsIndexUpdateRequest.getAttributeTypeMap();
        var res = {};
        for (var _i = 0, _a = Object.entries(data); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            if (!(key in attributeTypes)) {
                throw new TypeError(key + " attribute not in schema");
            }
        }
        res.daily_limit = ObjectSerializer_1.ObjectSerializer.serialize(data.dailyLimit, "number", "int64");
        res.disable_daily_limit = ObjectSerializer_1.ObjectSerializer.serialize(data.disableDailyLimit, "boolean", "");
        res.exclusion_filters = ObjectSerializer_1.ObjectSerializer.serialize(data.exclusionFilters, "Array<LogsExclusion>", "");
        if (data.filter === undefined) {
            throw new TypeError("missing required attribute 'filter' on 'LogsIndexUpdateRequest' object");
        }
        res.filter = ObjectSerializer_1.ObjectSerializer.serialize(data.filter, "LogsFilter", "");
        res.num_retention_days = ObjectSerializer_1.ObjectSerializer.serialize(data.numRetentionDays, "number", "int64");
        return res;
    };
    LogsIndexUpdateRequest.discriminator = undefined;
    LogsIndexUpdateRequest.attributeTypeMap = {
        "dailyLimit": {
            "baseName": "daily_limit",
            "type": "number",
            "format": "int64"
        },
        "disableDailyLimit": {
            "baseName": "disable_daily_limit",
            "type": "boolean",
            "format": ""
        },
        "exclusionFilters": {
            "baseName": "exclusion_filters",
            "type": "Array<LogsExclusion>",
            "format": ""
        },
        "filter": {
            "baseName": "filter",
            "type": "LogsFilter",
            "format": ""
        },
        "numRetentionDays": {
            "baseName": "num_retention_days",
            "type": "number",
            "format": "int64"
        }
    };
    return LogsIndexUpdateRequest;
}());
exports.LogsIndexUpdateRequest = LogsIndexUpdateRequest;
//# sourceMappingURL=LogsIndexUpdateRequest.js.map