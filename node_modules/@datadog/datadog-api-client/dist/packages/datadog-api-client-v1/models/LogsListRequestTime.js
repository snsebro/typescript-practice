"use strict";
/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LogsListRequestTime = void 0;
var ObjectSerializer_1 = require("./ObjectSerializer");
/**
* Timeframe to retrieve the log from.
*/
var LogsListRequestTime = /** @class */ (function () {
    function LogsListRequestTime() {
    }
    LogsListRequestTime.getAttributeTypeMap = function () {
        return LogsListRequestTime.attributeTypeMap;
    };
    LogsListRequestTime.deserialize = function (data) {
        var res = new LogsListRequestTime();
        if (data.from === undefined) {
            throw new TypeError("missing required attribute 'from' on 'LogsListRequestTime' object");
        }
        res.from = ObjectSerializer_1.ObjectSerializer.deserialize(data.from, "Date", "date-time");
        res.timezone = ObjectSerializer_1.ObjectSerializer.deserialize(data.timezone, "string", "");
        if (data.to === undefined) {
            throw new TypeError("missing required attribute 'to' on 'LogsListRequestTime' object");
        }
        res.to = ObjectSerializer_1.ObjectSerializer.deserialize(data.to, "Date", "date-time");
        return res;
    };
    LogsListRequestTime.serialize = function (data) {
        var attributeTypes = LogsListRequestTime.getAttributeTypeMap();
        var res = {};
        for (var _i = 0, _a = Object.entries(data); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            if (!(key in attributeTypes)) {
                throw new TypeError(key + " attribute not in schema");
            }
        }
        if (data.from === undefined) {
            throw new TypeError("missing required attribute 'from' on 'LogsListRequestTime' object");
        }
        res.from = ObjectSerializer_1.ObjectSerializer.serialize(data.from, "Date", "date-time");
        res.timezone = ObjectSerializer_1.ObjectSerializer.serialize(data.timezone, "string", "");
        if (data.to === undefined) {
            throw new TypeError("missing required attribute 'to' on 'LogsListRequestTime' object");
        }
        res.to = ObjectSerializer_1.ObjectSerializer.serialize(data.to, "Date", "date-time");
        return res;
    };
    LogsListRequestTime.discriminator = undefined;
    LogsListRequestTime.attributeTypeMap = {
        "from": {
            "baseName": "from",
            "type": "Date",
            "format": "date-time"
        },
        "timezone": {
            "baseName": "timezone",
            "type": "string",
            "format": ""
        },
        "to": {
            "baseName": "to",
            "type": "Date",
            "format": "date-time"
        }
    };
    return LogsListRequestTime;
}());
exports.LogsListRequestTime = LogsListRequestTime;
//# sourceMappingURL=LogsListRequestTime.js.map