/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { LogQueryDefinition } from './LogQueryDefinition';
import { ProcessQueryDefinition } from './ProcessQueryDefinition';
import { WidgetChangeType } from './WidgetChangeType';
import { WidgetCompareTo } from './WidgetCompareTo';
import { WidgetOrderBy } from './WidgetOrderBy';
import { WidgetSort } from './WidgetSort';
/**
* Updated change widget.
*/
export declare class ChangeWidgetRequest {
    'apmQuery'?: LogQueryDefinition;
    'changeType'?: WidgetChangeType;
    'compareTo'?: WidgetCompareTo;
    'eventQuery'?: LogQueryDefinition;
    /**
    * Whether to show increase as good.
    */
    'increaseGood'?: boolean;
    'logQuery'?: LogQueryDefinition;
    'networkQuery'?: LogQueryDefinition;
    'orderBy'?: WidgetOrderBy;
    'orderDir'?: WidgetSort;
    'processQuery'?: ProcessQueryDefinition;
    'profileMetricsQuery'?: LogQueryDefinition;
    /**
    * Query definition.
    */
    'q'?: string;
    'rumQuery'?: LogQueryDefinition;
    'securityQuery'?: LogQueryDefinition;
    /**
    * Whether to show the present value.
    */
    'showPresent'?: boolean;
    static readonly discriminator: string | undefined;
    static readonly attributeTypeMap: {
        [key: string]: {
            baseName: string;
            type: string;
            format: string;
        };
    };
    static getAttributeTypeMap(): {
        [key: string]: {
            baseName: string;
            type: string;
            format: string;
        };
    };
    static deserialize(data: {
        [key: string]: any;
    }): ChangeWidgetRequest;
    static serialize(data: ChangeWidgetRequest): {
        [key: string]: any;
    };
    constructor();
}
