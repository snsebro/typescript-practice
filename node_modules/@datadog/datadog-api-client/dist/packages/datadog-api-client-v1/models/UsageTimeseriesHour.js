"use strict";
/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UsageTimeseriesHour = void 0;
var ObjectSerializer_1 = require("./ObjectSerializer");
/**
* The hourly usage of timeseries.
*/
var UsageTimeseriesHour = /** @class */ (function () {
    function UsageTimeseriesHour() {
    }
    UsageTimeseriesHour.getAttributeTypeMap = function () {
        return UsageTimeseriesHour.attributeTypeMap;
    };
    UsageTimeseriesHour.deserialize = function (data) {
        var res = new UsageTimeseriesHour();
        res.hour = ObjectSerializer_1.ObjectSerializer.deserialize(data.hour, "Date", "date-time");
        res.numCustomInputTimeseries = ObjectSerializer_1.ObjectSerializer.deserialize(data.num_custom_input_timeseries, "number", "int64");
        res.numCustomOutputTimeseries = ObjectSerializer_1.ObjectSerializer.deserialize(data.num_custom_output_timeseries, "number", "int64");
        res.numCustomTimeseries = ObjectSerializer_1.ObjectSerializer.deserialize(data.num_custom_timeseries, "number", "int64");
        return res;
    };
    UsageTimeseriesHour.serialize = function (data) {
        var attributeTypes = UsageTimeseriesHour.getAttributeTypeMap();
        var res = {};
        for (var _i = 0, _a = Object.entries(data); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            if (!(key in attributeTypes)) {
                throw new TypeError(key + " attribute not in schema");
            }
        }
        res.hour = ObjectSerializer_1.ObjectSerializer.serialize(data.hour, "Date", "date-time");
        res.num_custom_input_timeseries = ObjectSerializer_1.ObjectSerializer.serialize(data.numCustomInputTimeseries, "number", "int64");
        res.num_custom_output_timeseries = ObjectSerializer_1.ObjectSerializer.serialize(data.numCustomOutputTimeseries, "number", "int64");
        res.num_custom_timeseries = ObjectSerializer_1.ObjectSerializer.serialize(data.numCustomTimeseries, "number", "int64");
        return res;
    };
    UsageTimeseriesHour.discriminator = undefined;
    UsageTimeseriesHour.attributeTypeMap = {
        "hour": {
            "baseName": "hour",
            "type": "Date",
            "format": "date-time"
        },
        "numCustomInputTimeseries": {
            "baseName": "num_custom_input_timeseries",
            "type": "number",
            "format": "int64"
        },
        "numCustomOutputTimeseries": {
            "baseName": "num_custom_output_timeseries",
            "type": "number",
            "format": "int64"
        },
        "numCustomTimeseries": {
            "baseName": "num_custom_timeseries",
            "type": "number",
            "format": "int64"
        }
    };
    return UsageTimeseriesHour;
}());
exports.UsageTimeseriesHour = UsageTimeseriesHour;
//# sourceMappingURL=UsageTimeseriesHour.js.map