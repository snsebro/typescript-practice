"use strict";
/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrganizationCreateResponse = void 0;
var ObjectSerializer_1 = require("./ObjectSerializer");
/**
* Response object for an organization creation.
*/
var OrganizationCreateResponse = /** @class */ (function () {
    function OrganizationCreateResponse() {
    }
    OrganizationCreateResponse.getAttributeTypeMap = function () {
        return OrganizationCreateResponse.attributeTypeMap;
    };
    OrganizationCreateResponse.deserialize = function (data) {
        var res = new OrganizationCreateResponse();
        res.apiKey = ObjectSerializer_1.ObjectSerializer.deserialize(data.api_key, "ApiKey", "");
        res.applicationKey = ObjectSerializer_1.ObjectSerializer.deserialize(data.application_key, "ApplicationKey", "");
        res.org = ObjectSerializer_1.ObjectSerializer.deserialize(data.org, "Organization", "");
        res.user = ObjectSerializer_1.ObjectSerializer.deserialize(data.user, "User", "");
        return res;
    };
    OrganizationCreateResponse.serialize = function (data) {
        var attributeTypes = OrganizationCreateResponse.getAttributeTypeMap();
        var res = {};
        for (var _i = 0, _a = Object.entries(data); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            if (!(key in attributeTypes)) {
                throw new TypeError(key + " attribute not in schema");
            }
        }
        res.api_key = ObjectSerializer_1.ObjectSerializer.serialize(data.apiKey, "ApiKey", "");
        res.application_key = ObjectSerializer_1.ObjectSerializer.serialize(data.applicationKey, "ApplicationKey", "");
        res.org = ObjectSerializer_1.ObjectSerializer.serialize(data.org, "Organization", "");
        res.user = ObjectSerializer_1.ObjectSerializer.serialize(data.user, "User", "");
        return res;
    };
    OrganizationCreateResponse.discriminator = undefined;
    OrganizationCreateResponse.attributeTypeMap = {
        "apiKey": {
            "baseName": "api_key",
            "type": "ApiKey",
            "format": ""
        },
        "applicationKey": {
            "baseName": "application_key",
            "type": "ApplicationKey",
            "format": ""
        },
        "org": {
            "baseName": "org",
            "type": "Organization",
            "format": ""
        },
        "user": {
            "baseName": "user",
            "type": "User",
            "format": ""
        }
    };
    return OrganizationCreateResponse;
}());
exports.OrganizationCreateResponse = OrganizationCreateResponse;
//# sourceMappingURL=OrganizationCreateResponse.js.map