"use strict";
/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MonitorState = void 0;
var ObjectSerializer_1 = require("./ObjectSerializer");
/**
* Wrapper object with the different monitor states.
*/
var MonitorState = /** @class */ (function () {
    function MonitorState() {
    }
    MonitorState.getAttributeTypeMap = function () {
        return MonitorState.attributeTypeMap;
    };
    MonitorState.deserialize = function (data) {
        var res = new MonitorState();
        res.groups = ObjectSerializer_1.ObjectSerializer.deserialize(data.groups, "{ [key: string]: MonitorStateGroup; }", "");
        return res;
    };
    MonitorState.serialize = function (data) {
        var attributeTypes = MonitorState.getAttributeTypeMap();
        var res = {};
        for (var _i = 0, _a = Object.entries(data); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            if (!(key in attributeTypes)) {
                throw new TypeError(key + " attribute not in schema");
            }
        }
        res.groups = ObjectSerializer_1.ObjectSerializer.serialize(data.groups, "{ [key: string]: MonitorStateGroup; }", "");
        return res;
    };
    MonitorState.discriminator = undefined;
    MonitorState.attributeTypeMap = {
        "groups": {
            "baseName": "groups",
            "type": "{ [key: string]: MonitorStateGroup; }",
            "format": ""
        }
    };
    return MonitorState;
}());
exports.MonitorState = MonitorState;
//# sourceMappingURL=MonitorState.js.map